/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  KitnDisbursement,
  KitnDisbursementInterface,
} from "../../contracts/KitnDisbursement";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "result",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct KitnDisbursement.CoinsSpendResult[]",
        name: "results",
        type: "tuple[]",
      },
    ],
    name: "CoinsSpent",
    type: "event",
  },
  {
    inputs: [],
    name: "KITN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKitnBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWalletBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kitnToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_receivers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "spendCoins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405273e5a0f6bccbf606718d3e7844e64bf9c34727ea336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d74806100b56000396000f3fe6080604052600436106100595760003560e01c80632130d89c146100f5578063329a27e71461011e57806332ac6a09146101495780634328ec1d146101745780638da5cb5b1461019f578063961e681a146101ca576100f0565b366100f057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e5906106e7565b60405180910390fd5b005b600080fd5b34801561010157600080fd5b5061011c600480360381019061011791906107cc565b6101f5565b005b34801561012a57600080fd5b50610133610545565b6040516101409190610866565b60405180910390f35b34801561015557600080fd5b5061015e61054d565b60405161016b9190610866565b60405180910390f35b34801561018057600080fd5b506101896105ef565b60405161019691906108c2565b60405180910390f35b3480156101ab57600080fd5b506101b4610607565b6040516101c191906108c2565b60405180910390f35b3480156101d657600080fd5b506101df61062d565b6040516101ec919061093c565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027c906106e7565b60405180910390fd5b8181905084849050146102cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c4906109c9565b60405180910390fd5b60008484905067ffffffffffffffff8111156102ec576102eb6109e9565b5b60405190808252806020026020018201604052801561032557816020015b610312610651565b81526020019060019003908161030a5790505b50905060005b858590508110156105065785858281811061034957610348610a18565b5b905060200201602081019061035e9190610a73565b82828151811061037157610370610a18565b5b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508383828181106103c2576103c1610a18565b5b905060200201358282815181106103dc576103db610a18565b5b6020026020010151602001818152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87878481811061043b5761043a610a18565b5b90506020020160208101906104509190610a73565b86868581811061046357610462610a18565b5b905060200201356040518363ffffffff1660e01b8152600401610487929190610aa0565b6020604051808303816000875af11580156104a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ca9190610b01565b8282815181106104dd576104dc610a18565b5b6020026020010151604001901515908115158152505080806104fe90610b5d565b91505061032b565b507f1eb24303909b1ded9e9db3acc7cbaf2ee89f6169ec0b0853fe0f4c0052e601b2816040516105369190610cc3565b60405180910390a15050505050565b600047905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105a991906108c2565b602060405180830381865afa1580156105c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ea9190610d11565b905090565b73e5a0f6bccbf606718d3e7844e64bf9c34727ea3381565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b600082825260208201905092915050565b7f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000600082015250565b60006106d160178361068a565b91506106dc8261069b565b602082019050919050565b60006020820190508181036000830152610700816106c4565b9050919050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261073657610735610711565b5b8235905067ffffffffffffffff81111561075357610752610716565b5b60208301915083602082028301111561076f5761076e61071b565b5b9250929050565b60008083601f84011261078c5761078b610711565b5b8235905067ffffffffffffffff8111156107a9576107a8610716565b5b6020830191508360208202830111156107c5576107c461071b565b5b9250929050565b600080600080604085870312156107e6576107e5610707565b5b600085013567ffffffffffffffff8111156108045761080361070c565b5b61081087828801610720565b9450945050602085013567ffffffffffffffff8111156108335761083261070c565b5b61083f87828801610776565b925092505092959194509250565b6000819050919050565b6108608161084d565b82525050565b600060208201905061087b6000830184610857565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108ac82610881565b9050919050565b6108bc816108a1565b82525050565b60006020820190506108d760008301846108b3565b92915050565b6000819050919050565b60006109026108fd6108f884610881565b6108dd565b610881565b9050919050565b6000610914826108e7565b9050919050565b600061092682610909565b9050919050565b6109368161091b565b82525050565b6000602082019050610951600083018461092d565b92915050565b7f41206e756d626572206f6620726563656976657273206d75737420626520657160008201527f75616c20746f2061206e756d626572206f6620616d6f756e7473000000000000602082015250565b60006109b3603a8361068a565b91506109be82610957565b604082019050919050565b600060208201905081810360008301526109e2816109a6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b610a50816108a1565b8114610a5b57600080fd5b50565b600081359050610a6d81610a47565b92915050565b600060208284031215610a8957610a88610707565b5b6000610a9784828501610a5e565b91505092915050565b6000604082019050610ab560008301856108b3565b610ac26020830184610857565b9392505050565b60008115159050919050565b610ade81610ac9565b8114610ae957600080fd5b50565b600081519050610afb81610ad5565b92915050565b600060208284031215610b1757610b16610707565b5b6000610b2584828501610aec565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b688261084d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b9a57610b99610b2e565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610bda816108a1565b82525050565b610be98161084d565b82525050565b610bf881610ac9565b82525050565b606082016000820151610c146000850182610bd1565b506020820151610c276020850182610be0565b506040820151610c3a6040850182610bef565b50505050565b6000610c4c8383610bfe565b60608301905092915050565b6000602082019050919050565b6000610c7082610ba5565b610c7a8185610bb0565b9350610c8583610bc1565b8060005b83811015610cb6578151610c9d8882610c40565b9750610ca883610c58565b925050600181019050610c89565b5085935050505092915050565b60006020820190508181036000830152610cdd8184610c65565b905092915050565b610cee8161084d565b8114610cf957600080fd5b50565b600081519050610d0b81610ce5565b92915050565b600060208284031215610d2757610d26610707565b5b6000610d3584828501610cfc565b9150509291505056fea2646970667358221220cfc78b8cf9c98b1eaef8a5ca1cf1b5921c9247ac3caf5af289fda0935f9659c364736f6c63430008140033";

type KitnDisbursementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KitnDisbursementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KitnDisbursement__factory extends ContractFactory {
  constructor(...args: KitnDisbursementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      KitnDisbursement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): KitnDisbursement__factory {
    return super.connect(runner) as KitnDisbursement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KitnDisbursementInterface {
    return new Interface(_abi) as KitnDisbursementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): KitnDisbursement {
    return new Contract(address, _abi, runner) as unknown as KitnDisbursement;
  }
}
