/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  KitnDisbursement,
  KitnDisbursementInterface,
} from "../../contracts/KitnDisbursement";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeLimit",
        type: "uint256",
      },
    ],
    name: "AllowanceRenewed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CoinsSpent",
    type: "event",
  },
  {
    inputs: [],
    name: "KITN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWalletBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kitnToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "myAllowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timeLimit",
        type: "uint256",
      },
    ],
    name: "renewAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "spendCoins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "user",
    outputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405273e5a0f6bccbf606718d3e7844e64bf9c34727ea336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610be2806100b56000396000f3fe60806040526004361061007f5760003560e01c8063793eae8d1161004e578063793eae8d146101c95780638da5cb5b146101f2578063961e681a1461021d578063978d4e7e1461024857610116565b8063329a27e71461011b5780634328ec1d146101465780634f8632ba1461017157806369376af81461019e57610116565b3661011657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610114576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010b906106dc565b60405180910390fd5b005b600080fd5b34801561012757600080fd5b50610130610271565b60405161013d9190610715565b60405180910390f35b34801561015257600080fd5b5061015b610279565b6040516101689190610771565b60405180910390f35b34801561017d57600080fd5b50610186610291565b6040516101959392919061078c565b60405180910390f35b3480156101aa57600080fd5b506101b36102c9565b6040516101c09190610715565b60405180910390f35b3480156101d557600080fd5b506101f060048036038101906101eb91906107f4565b6102d6565b005b3480156101fe57600080fd5b5061020761045c565b6040516102149190610771565b60405180910390f35b34801561022957600080fd5b50610232610482565b60405161023f9190610893565b60405180910390f35b34801561025457600080fd5b5061026f600480360381019061026a91906108da565b6104a6565b005b600047905090565b73e5a0f6bccbf606718d3e7844e64bf9c34727ea3381565b60028060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b6000600260010154905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610366576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035d906106dc565b60405180910390fd5b600081426103749190610949565b905060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200184815260200182815250600260008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050503373ffffffffffffffffffffffffffffffffffffffff167f7b5d8b8c4a48ab3c4f698feadf9ec108f89b430c109781190da11151c6b66067848460405161044f92919061097d565b60405180910390a2505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600280015442106104ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e3906109f2565b60405180910390fd5b600260010154811115610534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052b90610a5e565b60405180910390fd5b80600260010160008282546105499190610a7e565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016105ab929190610ab2565b6020604051808303816000875af11580156105ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ee9190610b13565b61062d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062490610b8c565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f92c3d05f8ba31385c55d3263a9c7de7c1e17e7da9dba4b20246c3c0cf8df88c2826040516106739190610715565b60405180910390a25050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000600082015250565b60006106c660178361067f565b91506106d182610690565b602082019050919050565b600060208201905081810360008301526106f5816106b9565b9050919050565b6000819050919050565b61070f816106fc565b82525050565b600060208201905061072a6000830184610706565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061075b82610730565b9050919050565b61076b81610750565b82525050565b60006020820190506107866000830184610762565b92915050565b60006060820190506107a16000830186610762565b6107ae6020830185610706565b6107bb6040830184610706565b949350505050565b600080fd5b6107d1816106fc565b81146107dc57600080fd5b50565b6000813590506107ee816107c8565b92915050565b6000806040838503121561080b5761080a6107c3565b5b6000610819858286016107df565b925050602061082a858286016107df565b9150509250929050565b6000819050919050565b600061085961085461084f84610730565b610834565b610730565b9050919050565b600061086b8261083e565b9050919050565b600061087d82610860565b9050919050565b61088d81610872565b82525050565b60006020820190506108a86000830184610884565b92915050565b6108b781610750565b81146108c257600080fd5b50565b6000813590506108d4816108ae565b92915050565b600080604083850312156108f1576108f06107c3565b5b60006108ff858286016108c5565b9250506020610910858286016107df565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610954826106fc565b915061095f836106fc565b92508282019050808211156109775761097661091a565b5b92915050565b60006040820190506109926000830185610706565b61099f6020830184610706565b9392505050565b7f56616c6964697479206578706972656421210000000000000000000000000000600082015250565b60006109dc60128361067f565b91506109e7826109a6565b602082019050919050565b60006020820190508181036000830152610a0b816109cf565b9050919050565b7f416c6c6f77616e6365206e6f742073756666696369656e742121000000000000600082015250565b6000610a48601a8361067f565b9150610a5382610a12565b602082019050919050565b60006020820190508181036000830152610a7781610a3b565b9050919050565b6000610a89826106fc565b9150610a94836106fc565b9250828203905081811115610aac57610aab61091a565b5b92915050565b6000604082019050610ac76000830185610762565b610ad46020830184610706565b9392505050565b60008115159050919050565b610af081610adb565b8114610afb57600080fd5b50565b600081519050610b0d81610ae7565b92915050565b600060208284031215610b2957610b286107c3565b5b6000610b3784828501610afe565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000610b7660158361067f565b9150610b8182610b40565b602082019050919050565b60006020820190508181036000830152610ba581610b69565b905091905056fea2646970667358221220f7041e6f00f719f3b856db60ec4c2dbc948a528f95e8160fc53e1d95c4a1269b64736f6c63430008140033";

type KitnDisbursementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KitnDisbursementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KitnDisbursement__factory extends ContractFactory {
  constructor(...args: KitnDisbursementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      KitnDisbursement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): KitnDisbursement__factory {
    return super.connect(runner) as KitnDisbursement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KitnDisbursementInterface {
    return new Interface(_abi) as KitnDisbursementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): KitnDisbursement {
    return new Contract(address, _abi, runner) as unknown as KitnDisbursement;
  }
}
