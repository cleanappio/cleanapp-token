/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  KitnDisbursement,
  KitnDisbursementInterface,
} from "../../../contracts/KitnDisbursement.sol/KitnDisbursement";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeLimit",
        type: "uint256",
      },
    ],
    name: "AllowanceRenewed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CoinsSpent",
    type: "event",
  },
  {
    inputs: [],
    name: "KITN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWalletBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kitnToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "myAllowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timeLimit",
        type: "uint256",
      },
    ],
    name: "renewAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "spendCoins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405273e5a0f6bccbf606718d3e7844e64bf9c34727ea336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d03806100b56000396000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b146101c5578063961e681a146101f0578063978d4e7e1461021b578063a87430ba1461024457610116565b8063260e67a71461011b578063329a27e7146101445780634328ec1d1461016f57806369376af81461019a57610116565b3661011657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610114576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010b906107bd565b60405180910390fd5b005b600080fd5b34801561012757600080fd5b50610142600480360381019061013d9190610876565b610283565b005b34801561015057600080fd5b50610159610447565b60405161016691906108d8565b60405180910390f35b34801561017b57600080fd5b5061018461044f565b6040516101919190610902565b60405180910390f35b3480156101a657600080fd5b506101af610467565b6040516101bc91906108d8565b60405180910390f35b3480156101d157600080fd5b506101da6104b1565b6040516101e79190610902565b60405180910390f35b3480156101fc57600080fd5b506102056104d7565b604051610212919061097c565b60405180910390f35b34801561022757600080fd5b50610242600480360381019061023d9190610997565b6104fb565b005b34801561025057600080fd5b5061026b600480360381019061026691906109d7565b610716565b60405161027a93929190610a04565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610313576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030a906107bd565b60405180910390fd5b600081426103219190610a6a565b905060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200182815250600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050508373ffffffffffffffffffffffffffffffffffffffff167f7b5d8b8c4a48ab3c4f698feadf9ec108f89b430c109781190da11151c6b660678484604051610439929190610a9e565b60405180910390a250505050565b600047905090565b73e5a0f6bccbf606718d3e7844e64bf9c34727ea3381565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600201544210610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b90610b13565b60405180910390fd5b80600101548211156105cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c290610b7f565b60405180910390fd5b818160010160008282546105df9190610b9f565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401610641929190610bd3565b6020604051808303816000875af1158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190610c34565b6106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba90610cad565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff167f92c3d05f8ba31385c55d3263a9c7de7c1e17e7da9dba4b20246c3c0cf8df88c28360405161070991906108d8565b60405180910390a2505050565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b600082825260208201905092915050565b7f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000600082015250565b60006107a7601783610760565b91506107b282610771565b602082019050919050565b600060208201905081810360008301526107d68161079a565b9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061080d826107e2565b9050919050565b61081d81610802565b811461082857600080fd5b50565b60008135905061083a81610814565b92915050565b6000819050919050565b61085381610840565b811461085e57600080fd5b50565b6000813590506108708161084a565b92915050565b60008060006060848603121561088f5761088e6107dd565b5b600061089d8682870161082b565b93505060206108ae86828701610861565b92505060406108bf86828701610861565b9150509250925092565b6108d281610840565b82525050565b60006020820190506108ed60008301846108c9565b92915050565b6108fc81610802565b82525050565b600060208201905061091760008301846108f3565b92915050565b6000819050919050565b600061094261093d610938846107e2565b61091d565b6107e2565b9050919050565b600061095482610927565b9050919050565b600061096682610949565b9050919050565b6109768161095b565b82525050565b6000602082019050610991600083018461096d565b92915050565b600080604083850312156109ae576109ad6107dd565b5b60006109bc8582860161082b565b92505060206109cd85828601610861565b9150509250929050565b6000602082840312156109ed576109ec6107dd565b5b60006109fb8482850161082b565b91505092915050565b6000606082019050610a1960008301866108f3565b610a2660208301856108c9565b610a3360408301846108c9565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a7582610840565b9150610a8083610840565b9250828201905080821115610a9857610a97610a3b565b5b92915050565b6000604082019050610ab360008301856108c9565b610ac060208301846108c9565b9392505050565b7f56616c6964697479206578706972656421210000000000000000000000000000600082015250565b6000610afd601283610760565b9150610b0882610ac7565b602082019050919050565b60006020820190508181036000830152610b2c81610af0565b9050919050565b7f416c6c6f77616e6365206e6f742073756666696369656e742121000000000000600082015250565b6000610b69601a83610760565b9150610b7482610b33565b602082019050919050565b60006020820190508181036000830152610b9881610b5c565b9050919050565b6000610baa82610840565b9150610bb583610840565b9250828203905081811115610bcd57610bcc610a3b565b5b92915050565b6000604082019050610be860008301856108f3565b610bf560208301846108c9565b9392505050565b60008115159050919050565b610c1181610bfc565b8114610c1c57600080fd5b50565b600081519050610c2e81610c08565b92915050565b600060208284031215610c4a57610c496107dd565b5b6000610c5884828501610c1f565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000610c97601583610760565b9150610ca282610c61565b602082019050919050565b60006020820190508181036000830152610cc681610c8a565b905091905056fea2646970667358221220e454fac245de4b3e6ba39d4b1dd188c43bd45da71cb91971b97ba2e96960fa1464736f6c63430008140033";

type KitnDisbursementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KitnDisbursementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KitnDisbursement__factory extends ContractFactory {
  constructor(...args: KitnDisbursementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      KitnDisbursement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): KitnDisbursement__factory {
    return super.connect(runner) as KitnDisbursement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KitnDisbursementInterface {
    return new Interface(_abi) as KitnDisbursementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): KitnDisbursement {
    return new Contract(address, _abi, runner) as unknown as KitnDisbursement;
  }
}
